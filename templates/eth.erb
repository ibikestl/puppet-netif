<%
    # template for regular ethernet interface
    
    require 'ipaddr'
    Puppet::Parser::Functions.autoloader.loadall
    
    # split out ip and netmask 
    (ip,bitmask) = ifaddr.split('/',2)
    
    # create IP classes
    ipclass     = IPAddr.new(ip)
    netclass    = IPAddr.new(ifaddr)
    dotmask     = netclass.inspect.to_s.split('/',2)[1].sub(/>/,'')
    macaddress  = scope.to_hash["macaddress_" + name]

-%>
DEVICE=<%= ifname %>
TYPE=Ethernet
BOOTPROTO="static"
NM_CONTROLLED="no"
ONBOOT=<%= onboot %>
IPADDR=<%= ip %>
NETMASK=<%= dotmask %>
PREFIX=<%= bitmask %>
<% unless ifaddr6.empty? -%>
IPV6ADDR="<%= ifaddr6 %>"
IPV6INIT="yes"
<% end -%>
HWADDR=<%= macaddress %>
MTU=<%= mtu %>
